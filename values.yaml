# Default values for taiga.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

taigaDb:
  image:
    repository: postgres    
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-db
  service:
    type: ClusterIP
    port: 5432
    selector:
      app: taiga-db

taigaAsyncRabbitmq:
  image:
    repository: rabbitmq     
    pullPolicy: IfNotPresent
    tag: "management-alpine"
  selectorLabels:
    app: taiga-async-rabbitmq
  service:
    type: ClusterIP
    ports:
      - name: amqp
        port: 5672
      - name: management
        port: 15672
    selector:
      app: taiga-async-rabbitmq

taigaEventsRabbitmq:
  image:
    repository: rabbitmq
    pullPolicy: IfNotPresent
    tag: "management-alpine"
  selectorLabels:
    app: taiga-events-rabbitmq
  service:
    type: ClusterIP
    ports:
      - name: amqp
        port: 5672
      - name: management
        port: 15672
    selector:
      app: taiga-events-rabbitmq

taigaAsync:
  image:
    repository: taigaio/taiga-back     
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-async
  service:
    type: ClusterIP
    port: 8000
    selector:
      app: taiga-async

taigaBack:
  image:
    repository: taigaio/taiga-back     
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-back
  service:
    type: ClusterIP
    port: 8000
    selector:
      app: taiga-back

taigaEvents:
  image:
    repository: taigaio/taiga-events    
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-events
  service:
    type: ClusterIP
    port: 8888
    selector:
      app: taiga-events

taigaFront:
  image:
    repository: taigaio/taiga-front   
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-front
  service:
    type: ClusterIP
    port: 80
    selector:
      app: taiga-front

taigaProtected:
  image:
    repository: taigaio/taiga-protected     
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-protected
  service:
    type: ClusterIP
    port: 8003
    selector:
      app: taiga-protected

taigaGateway:
  image:
    repository: nginx     
    pullPolicy: IfNotPresent
    tag: "latest"
  selectorLabels:
    app: taiga-gateway
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    selector:
      app: taiga-gateway
  volumeMounts:
  - mountPath: /etc/nginx/conf.d/default.conf
    subPath: default.conf
    name: taiga-gateway-config
  - name: taiga-static-data
    mountPath: /taiga/static
  - name: taiga-media-data
    mountPath: /taiga/media
  volumes:
  - name: taiga-gateway-config
    configMap:
      name: taiga-gateway-config
  - name: taiga-static-data
    emptyDir: {}
  - name: taiga-media-data
    emptyDir: {}